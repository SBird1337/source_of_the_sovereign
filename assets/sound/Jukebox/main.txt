
main.o:     file format elf32-littlearm
main.o
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x09df0000

Program Header:
    LOAD off    0x00008000 vaddr 0x00000000 paddr 0x00000000 align 2**15
         filesz 0x00000078 memsz 0x00000078 flags r-x
    LOAD off    0x00010000 vaddr 0x09df0000 paddr 0x09df0000 align 2**15
         filesz 0x00000a18 memsz 0x00000a18 flags r-x
private flags = 5000002: [Version5 EABI] [has entry point]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000a18  09df0000  09df0000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       00000014  00000000  00000000  00008000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .text.startup 00000060  00000018  00000018  00008018  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .comment      00000022  00000000  00000000  00010a18  2**0
                  CONTENTS, READONLY
  4 .ARM.attributes 00000032  00000000  00000000  00010a3a  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
09df0000 l    d  .text	00000000 .text
00000000 l    d  .rodata	00000000 .rodata
00000018 l    d  .text.startup	00000000 .text.startup
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 cassette.c
00000000 l    df *ABS*	00000000 background.c
09df09c0 l     F .text	0000000c __clearOAM_from_thumb
09df09cc l     F .text	00000008 __fadeScreenNormal_from_thumb
09df09d4 l     F .text	00000008 __updateEverything_from_thumb
09df09dc l     F .text	0000000c __free_from_thumb
09df09e8 l     F .text	0000000c __someExitFunc_from_thumb
09df09f4 l     F .text	0000000c __storeCallback_from_thumb
09df0a00 l     F .text	00000008 __fadeScreenBlack_from_thumb
00000048 l     F .text.startup	0000000c __malloc_from_thumb
00000054 l     F .text.startup	0000000c __fadeScreenBlack_from_thumb
00000060 l     F .text.startup	0000000c __storeCallback_from_thumb
09df00ac g     O .text	00000020 cassettePal
082fcdb9 g       *ABS*	00000000 ArcTan2
09df0000 g     F .text	00000080 mainCallback
09df00a8 g     F .text	00000002 loadContent
09e10001 g       *ABS*	00000000 initStuff
030022f0 g       *ABS*	00000000 KEYSSCROLL
030022ee g       *ABS*	00000000 KEYS
082fcded g       *ABS*	00000000 ResetSystem
09e100c9 g       *ABS*	00000000 createSprite
0203bcd0 g       *ABS*	00000000 globalVars
030022ec g       *ABS*	00000000 KEYSHOLD
080017e9 g       *ABS*	00000000 initMapData
08006975 g       *ABS*	00000000 clearOAM
08000b39 g       *ABS*	00000000 malloc
08000541 g       *ABS*	00000000 storeCallback
080861cd g       *ABS*	00000000 nullCallback
080a37c1 g       *ABS*	00000000 playSound
08199971 g       *ABS*	00000000 boxPrint
08003659 g       *ABS*	00000000 writeBoxesToTilemap
082fce09 g       *ABS*	00000000 VBlankIntrWait
082fcde1 g       *ABS*	00000000 RLUnCompVram
080a1955 g       *ABS*	00000000 loadPalette
09df04cc g     O .text	00000004 backgroundPal
080006f1 g       *ABS*	00000000 storeCallback2
09df04d0 g     O .text	000004b0 backgroundMap
083023e8 g       *ABS*	00000000 dummyAnimData
082fcddd g       *ABS*	00000000 ObjAffineSet
082fcdc1 g       *ABS*	00000000 CpuFastSet
09e10029 g       *ABS*	00000000 updateEverything
02037914 g       *ABS*	00000000 OBJ_PaletteMem
08007429 g       *ABS*	00000000 dummyAnimRoutine
080010b5 g       *ABS*	00000000 changeIO
030022f8 g       *ABS*	00000000 OAM_Mem
0859cb38 g       *ABS*	00000000 boxInitStuff
082f5e71 g       *ABS*	00000000 m4aSongNumStart
082fcde3 g       *ABS*	00000000 RLUnCompWram
080a313d g       *ABS*	00000000 waitForFanfare
080a3101 g       *ABS*	00000000 playFanfare
02037d14 g       *ABS*	00000000 OBJ_PaletteMem2
082fcde9 g       *ABS*	00000000 RegisterRamReset
00000018 g     F .text.startup	0000002c main
08008745 g       *ABS*	00000000 loadSpritePal
082f5e9d g       *ABS*	00000000 m4aSongNumStartOrChange
082fd4d0 g       *ABS*	00000000 __aeabi_uidiv
082fcdbd g       *ABS*	00000000 BgAffineSet
09df00a4 g     F .text	00000002 resetBackgrounds
020375e0 g       *ABS*	00000000 var8004
030022f1 g       *ABS*	00000000 KEYSSCROLLLR
080031c1 g       *ABS*	00000000 forceNewBoxAndInitBG
02037714 g       *ABS*	00000000 BG_PaletteMem
082f5ee9 g       *ABS*	00000000 m4aSongNumStartOrContinue
030022ed g       *ABS*	00000000 KEYSHOLDLR
080a1af1 g       *ABS*	00000000 fadeScreen
08003605 g       *ABS*	00000000 someExitFunc
09df0080 g     F .text	00000024 unloadRoutine
082fcdc9 g       *ABS*	00000000 Div
09df0980 g     O .text	00000040 backgroundTiles
020375f0 g       *ABS*	00000000 LASTRESULT
082fcdd1 g       *ABS*	00000000 LZ77UnCompWram
08001b31 g       *ABS*	00000000 enableBG
82fcdd45 g       *ABS*	00000000 MultiBoot
09e10105 g       *ABS*	00000000 deleteSprite
082fcdc5 g       *ABS*	00000000 CpuSet
09e10081 g       *ABS*	00000000 fadeScreenBlack
02037fdb g       *ABS*	00000000 fadeScreenDone
02037b14 g       *ABS*	00000000 BG_PaletteMem2
082fce05 g       *ABS*	00000000 Sqrt
09e100a5 g       *ABS*	00000000 fadeScreenNormal
09e10059 g       *ABS*	00000000 updateEverything2
09df00cc g     O .text	00000400 cassetteTiles
082f5f3d g       *ABS*	00000000 m4aSongNumStop
08000b61 g       *ABS*	00000000 free
080a38bd g       *ABS*	00000000 waitForSound
030022ef g       *ABS*	00000000 KEYSLR
082fcdcd g       *ABS*	00000000 LZ77UnCompVram


